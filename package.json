{
  "name": "iobroker.klf200",
  "version": "1.1.2",
  "description": "Controls products and scenes connected to a KLF-200 interface",
  "author": {
    "name": "Michael Schroeder",
    "email": "klf200@gmx.de"
  },
  "homepage": "https://github.com/MiSchroe/ioBroker.klf200",
  "license": "MIT",
  "keywords": [
    "KLF-200",
    "VELUX"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/MiSchroe/ioBroker.klf200"
  },
  "engines": {
    "node": ">= 16"
  },
  "dependencies": {
    "@iobroker/adapter-core": "^3.0.4",
    "klf-200-api": "^3.1.3",
    "promise-timeout": "^1.3.0"
  },
  "devDependencies": {
    "@alcalzone/release-script": "^3.7.0",
    "@alcalzone/release-script-plugin-iobroker": "^3.7.0",
    "@alcalzone/release-script-plugin-license": "^3.5.9",
    "@iobroker/adapter-dev": "^1.2.0",
    "@iobroker/testing": "^4.1.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@tsconfig/node16": "^16.1.1",
    "@types/chai": "^4.3.9",
    "@types/chai-as-promised": "^7.1.8",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.10.1",
    "@types/node-schedule": "^2.1.5",
    "@types/proxyquire": "^1.3.30",
    "@types/sinon": "^10.0.19",
    "@types/sinon-chai": "^3.2.11",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.9.1",
    "chai": "^4.3.10",
    "chai-as-promised": "^7.1.1",
    "cross-conf-env": "^1.3.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-deprecation": "^2.0.0",
    "eslint-plugin-prettier": "^5.1.3",
    "mocha": "^10.2.0",
    "mocha-junit-reporter": "^2.2.1",
    "node-schedule": "^2.1.1",
    "nyc": "^15.1.0",
    "prettier": "^3.1.0",
    "proxyquire": "^2.1.3",
    "rimraf": "^5.0.5",
    "sinon": "^17.0.0",
    "sinon-chai": "^3.7.0",
    "source-map-support": "^0.5.21",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "main": "build/main.js",
  "scripts": {
    "prebuild": "rimraf ./build",
    "build:ts": "tsc -p tsconfig.build.json",
    "build": "build-adapter typescript",
    "watch:ts": "tsc -p tsconfig.build.json --watch",
    "watch": "npm run watch:ts",
    "test:ts": "mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts",
    "test:tstap": "mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts --reporter tap",
    "test:tsjunit": "mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts --reporter mocha-junit-reporter",
    "test:package": "mocha test/package --exit",
    "test:packagetap": "mocha test/package --exit --reporter tap",
    "test:packagejunit": "mocha test/package --exit --reporter mocha-junit-reporter",
    "test:integration": "mocha test/integration --exit",
    "test:integrationjunit": "mocha test/integration --exit --reporter mocha-junit-reporter",
    "test": "npm run test:tstap && npm run test:packagetap",
    "test:unit": "npm run test:ts",
    "check": "tsc -p tsconfig.build.json --noEmit",
    "coverage": "nyc mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts",
    "coveragejunit": "nyc --reporter=cobertura --reporter=html mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts --reporter mocha-junit-reporter",
    "lint": "eslint --ext .ts src",
    "prepare": "npm run build",
    "release": "release-script",
    "translate": "translate-adapter",
    "deploy:container": "npm pack && cross-conf-env docker cp ./$npm_package_name-$npm_package_version.tgz iobroker:/opt/iobroker/tarballs/ && cross-conf-env docker exec iobroker npm install /opt/iobroker/tarballs/$npm_package_name-$npm_package_version.tgz --workdir /opt/iobroker && cross-conf-env docker exec iobroker iobroker restart klf200.0"
  },
  "nyc": {
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "src/{**/*,*}.test.ts"
    ],
    "extension": [
      ".ts"
    ],
    "require": [
      "./test/mocha.setup.js",
      "ts-node/register"
    ],
    "reporter": [
      "text-summary",
      "html"
    ],
    "sourceMap": true,
    "instrument": true
  },
  "bugs": {
    "url": "https://github.com/MiSchroe/ioBroker.klf200/issues"
  },
  "readmeFilename": "README.md"
}
