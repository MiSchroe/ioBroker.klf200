{
	"name": "iobroker.klf200",
	"version": "1.3.5",
	"description": "Controls products and scenes connected to a KLF-200 interface",
	"author": {
		"name": "Michael Schroeder",
		"email": "klf200@gmx.de"
	},
	"homepage": "https://github.com/MiSchroe/ioBroker.klf200",
	"license": "MIT",
	"keywords": [
		"KLF-200",
		"VELUX",
		"ioBroker"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/MiSchroe/ioBroker.klf200"
	},
	"engines": {
		"node": ">= 20"
	},
	"dependencies": {
		"@iobroker/adapter-core": "^3.2.3",
		"@iobroker/dm-utils": "^1.0.10",
		"klf-200-api": "^6.0.0",
		"ping": "^0.4.4",
		"promise-timeout": "^1.3.0"
	},
	"devDependencies": {
		"@alcalzone/release-script": "^3.8.0",
		"@alcalzone/release-script-plugin-iobroker": "^3.7.2",
		"@alcalzone/release-script-plugin-license": "^3.7.0",
		"@alcalzone/release-script-plugin-manual-review": "^3.7.0",
		"@iobroker/adapter-dev": "^1.4.0",
		"@iobroker/build-tools": "^2.0.15",
		"@iobroker/eslint-config": "^2.0.2",
		"@iobroker/testing": "^5.0.4",
		"@istanbuljs/nyc-config-typescript": "^1.0.2",
		"@tsconfig/node20": "^20.1.5",
		"@types/chai": "^5.2.2",
		"@types/chai-as-promised": "^8.0.2",
		"@types/debug": "^4.1.12",
		"@types/deep-eql": "^4.0.2",
		"@types/mocha": "^10.0.10",
		"@types/node": "^20.17.50",
		"@types/node-schedule": "^2.1.7",
		"@types/ping": "^0.4.4",
		"@types/promise-timeout": "^1.3.3",
		"@types/proxyquire": "^1.3.31",
		"@types/sinon": "^17.0.4",
		"@types/sinon-chai": "^4.0.0",
		"c8": "^10.1.3",
		"chai": "^5.2.1",
		"chai-as-promised": "^8.0.1",
		"cross-conf-env": "^1.3.0",
		"cross-env": "^10.1.0",
		"debug": "^4.4.1",
		"deep-eql": "^5.0.2",
		"mocha": "^11.7.1",
		"mocha-junit-reporter": "^2.2.1",
		"node-schedule": "^2.1.1",
		"sinon": "^21.0.0",
		"sinon-chai": "^4.0.0",
		"source-map-support": "^0.5.21",
		"tsx": "^4.20.3",
		"typescript": "^5.8.3"
	},
	"type": "module",
	"main": "build/main.js",
	"scripts": {
		"prebuild:adapter": "clean-dir ./build",
		"build:ts": "tsc -p tsconfig.build.json",
		"build:test": "tsc -p tsconfig.build.json --showConfig",
		"build:admin": "node tasks --default",
		"build:adapter": "tsc -p tsconfig.build.json",
		"build": "npm run build:adapter && npm run build:admin",
		"watch:ts": "tsc -p tsconfig.build.json --watch",
		"watch": "npm run watch:ts",
		"test:ts": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts",
		"test:tstap": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts --reporter tap",
		"test:tsjunit": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts --reporter mocha-junit-reporter",
		"test:package": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha test/package --exit",
		"test:packagetap": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha test/package --exit --reporter tap",
		"test:packagejunit": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha test/package --exit --reporter mocha-junit-reporter",
		"test:integration-debug": "cross-env DEBUG=-testing:integration:*,mockServer* mocha --config test/mocharc.integration.json --require test/mocha.debug.js test/integration.ts --exit --disable-timeouts",
		"test:integration": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha --config test/mocharc.integration.json test/integration.ts --exit",
		"test:integrationjunit": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha --config test/mocharc.integration.json test/integration.ts --exit --reporter mocha-junit-reporter",
		"test": "npm run test:tstap && npm run test:packagetap",
		"test:unit": "npm run test:ts",
		"check": "tsc -p tsconfig.build.json --noEmit",
		"coverage": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' c8 mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts",
		"coveragejunit": "cross-env NODE_OPTIONS='--dns-result-order=ipv4first' c8 --reporter=cobertura --reporter=html mocha --config test/mocharc.custom.json src/{**/*,*}.test.ts --reporter mocha-junit-reporter",
		"lint": "eslint -c eslint.config.mjs",
		"prepack": "npm run build",
		"release": "release-script",
		"translate": "translate-adapter",
		"translate:src-admin": "translate-adapter --admin ./src-admin",
		"deploy:container": "npm pack && cross-conf-env docker cp ./$npm_package_name-$npm_package_version.tgz iobroker:/opt/iobroker/tarballs/ && cross-conf-env docker exec iobroker npm install /opt/iobroker/tarballs/$npm_package_name-$npm_package_version.tgz --workdir /opt/iobroker && cross-conf-env docker exec iobroker iobroker upload klf200 && cross-conf-env docker exec iobroker iobroker restart klf200.0"
	},
	"bugs": {
		"url": "https://github.com/MiSchroe/ioBroker.klf200/issues"
	},
	"readmeFilename": "README.md",
	"files": [
		"build",
		"admin",
		"docs",
		"img",
		"io-package.json"
	]
}
