{"version":3,"file":"static/js/src_Components_jsx.ad05ae90.chunk.js","mappings":"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","sources":["ConnectionTestResultTableComponent.jsx","ConnectionTestComponent.jsx","Components.jsx","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n\tTable,\n\tTableHead,\n\tTableBody,\n\tTableContainer,\n\tTableRow,\n\tTableCell,\n\tuseMediaQuery,\n\tuseTheme,\n\tStack,\n\tDivider,\n\tBox,\n\tGrid,\n} from \"@mui/material\";\nimport { I18n } from \"@iobroker/adapter-react-v5\";\n\nconst ConnectionTestResultTableComponent = ({ testResults }) => {\n\tconst theme = useTheme();\n\tconst matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n\tif (matches) {\n\t\treturn (\n\t\t\t<TableContainer>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell align=\"left\" size=\"small\">\n\t\t\t\t\t\t\t\t{I18n.t(\"custom_klf200_test_connection_status_header\")}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t{I18n.t(\"custom_klf200_test_connection_step_name_header\")}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"left\">{I18n.t(\"custom_klf200_test_connection_result_header\")}</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"left\">{I18n.t(\"custom_klf200_test_connection_message_header\")}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{testResults.map((testResult) => (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tkey={testResult.stepOrder}\n\t\t\t\t\t\t\t\tsx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n\t\t\t\t\t\t\t\thover={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" size=\"small\">\n\t\t\t\t\t\t\t\t\t{testResult.run ? (testResult.success ? \"✅\" : \"❌\") : \"\"}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{testResult.stepName}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align={typeof testResult.result === \"number\" ? \"right\" : \"left\"}>\n\t\t\t\t\t\t\t\t\t{String(testResult.result ?? \"\")}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{testResult.message ?? \"\"}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Stack\n\t\t\t\tdivider={<Divider orientation=\"horizontal\" flexItem />}\n\t\t\t\tspacing={1}\n\t\t\t\tsx={{ marginTop: 1, overflow: \"auto\", height: \"100%\" }}\n\t\t\t>\n\t\t\t\t{testResults.map((testResult) => (\n\t\t\t\t\t<Grid container key={testResult.stepOrder}>\n\t\t\t\t\t\t<Grid item xs={6} display=\"flex\" justifyContent=\"left\" alignItems=\"left\" fontWeight={\"bold\"}>\n\t\t\t\t\t\t\t{I18n.t(\"custom_klf200_test_connection_step_name_header\")}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t{testResult.stepName}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} display=\"flex\" justifyContent=\"left\" alignItems=\"left\" fontWeight={\"bold\"}>\n\t\t\t\t\t\t\t{I18n.t(\"custom_klf200_test_connection_status_header\")}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t{testResult.run ? (testResult.success ? \"✅\" : \"❌\") : \"\"}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} display=\"flex\" justifyContent=\"left\" alignItems=\"left\" fontWeight={\"bold\"}>\n\t\t\t\t\t\t\t{I18n.t(\"custom_klf200_test_connection_result_header\")}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t{String(testResult.result ?? \"\")}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} display=\"flex\" justifyContent=\"left\" alignItems=\"left\" fontWeight={\"bold\"}>\n\t\t\t\t\t\t\t{I18n.t(\"custom_klf200_test_connection_message_header\")}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t{testResult.message ?? \"\"}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Stack>\n\t\t);\n\t}\n};\n\nexport default ConnectionTestResultTableComponent;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"@mui/material\";\n\nimport ConnectionTestResultTableComponent from \"./ConnectionTestResultTableComponent\";\nimport { I18n } from \"@iobroker/adapter-react-v5\";\n\nconst styles = {\n\tbutton: {\n\t\tminWidth: 150,\n\t},\n};\n\nconst ConnectionTestComponent = ({ adapterName, instance, socket, data }) => {\n\tconst [alive, setAlive] = useState(false);\n\tconst [testRunning, setTestRunning] = useState(false);\n\tconst [testResults, setTestResults] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst onAliveChanged = (id, state) => {\n\t\t\tconst alive = state ? state.val : false;\n\t\t\tsetAlive(alive);\n\t\t};\n\n\t\tconst getAliveState = async () => {\n\t\t\tconst stateAlive = await socket.getState(`system.adapter.${adapterName}.${instance}.alive`);\n\n\t\t\tif (stateAlive && stateAlive.val !== undefined) {\n\t\t\t\tsetAlive(stateAlive.val);\n\t\t\t} else {\n\t\t\t\tsetAlive(false);\n\t\t\t}\n\n\t\t\tawait socket.subscribeState(`system.adapter.${adapterName}.${instance}.alive`, onAliveChanged);\n\t\t};\n\t\tgetAliveState();\n\n\t\t// Return a cleanup function to unsubscribe from events\n\t\treturn () => {\n\t\t\t// Unsubscribe from events here\n\t\t\tsocket.unsubscribeState(`system.adapter.${adapterName}.${instance}.alive`, onAliveChanged);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst onChangedState = (id, state) => {\n\t\t\tif (id.endsWith(\".running\")) {\n\t\t\t\tconst testRunning = state ? state.val : false;\n\t\t\t\tsetTestRunning(testRunning);\n\t\t\t} else if (id.endsWith(\".testResults\")) {\n\t\t\t\tconst testResults = state ? JSON.parse(state.val || \"[]\") : [];\n\t\t\t\tsetTestResults(testResults);\n\t\t\t}\n\t\t};\n\n\t\tconst getRunningState = async () => {\n\t\t\tconst stateTestRunning = await socket.getState(`${adapterName}.${instance}.TestConnection.running`);\n\n\t\t\tif (stateTestRunning && stateTestRunning.val === true) {\n\t\t\t\tsetTestRunning(stateTestRunning.val);\n\n\t\t\t\tconst stateTestResults = await socket.getState(`${adapterName}.${instance}.TestConnection.testResults`);\n\n\t\t\t\tif (stateTestResults && stateTestResults.val !== undefined) {\n\t\t\t\t\tsetTestResults(JSON.parse(stateTestResults.val || \"[]\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetTestRunning(false);\n\n\t\t\t\tsocket.setState(`${adapterName}.${instance}.TestConnection.testResults`, \"[]\", true);\n\t\t\t}\n\n\t\t\tawait socket.subscribeState(`${adapterName}.${instance}.TestConnection.*`, onChangedState);\n\t\t};\n\t\tgetRunningState();\n\n\t\t// Return a cleanup function to unsubscribe from events\n\t\treturn () => {\n\t\t\t// Unsubscribe from events here\n\t\t\tsocket.unsubscribeState(`${adapterName}.${instance}.TestConnection.*`, onChangedState);\n\t\t};\n\t}, []);\n\n\tconst testConnectionHandler = async () => {\n\t\ttry {\n\t\t\tconst message = {\n\t\t\t\tcommand: \"ConnectionTest\",\n\t\t\t\thostname: data.host,\n\t\t\t\tpassword: await socket.encrypt(data.password),\n\t\t\t};\n\n\t\t\t// Set the advanced SSL configuration if enabled\n\t\t\tif (data.advancedSSLConfiguration) {\n\t\t\t\tmessage.advancedSSLConfiguration = {\n\t\t\t\t\tsslFingerprint: data.SSLFingerprint,\n\t\t\t\t\tsslPublicKey: data.SSLPublicKey,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst connectionTestResult = await socket.sendTo(`${adapterName}.${instance}`, message.command, message);\n\n\t\t\tsetTestResults(connectionTestResult);\n\t\t} finally {\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button\n\t\t\t\tstyle={styles.button}\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tdisabled={!alive || testRunning}\n\t\t\t\tonClick={testConnectionHandler}\n\t\t\t>\n\t\t\t\t{I18n.t(\"custom_klf200_test_connection_button\")}\n\t\t\t</Button>\n\t\t\t{!alive && <p>{I18n.t(\"custom_klf200_test_connection_not_alive_hint\")}</p>}\n\t\t\t{(testRunning || testResults.length > 0) && (\n\t\t\t\t<ConnectionTestResultTableComponent testResults={testResults} />\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ConnectionTestComponent;\n\n","import ConnectionTestComponent from \"./ConnectionTestComponent\";\n\nexport default { ConnectionTestComponent };\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["testResults","theme","testResult","styles","adapterName","instance","socket","data","alive","setAlive","testRunning","setTestRunning","setTestResults","onAliveChanged","id","state","stateAlive","onChangedState","stateTestRunning","stateTestResults","testConnectionHandler","message","connectionTestResult","f","k","l","m","n","p","q","c","a","g","b","d","e","h","exports","module"],"sourceRoot":""}