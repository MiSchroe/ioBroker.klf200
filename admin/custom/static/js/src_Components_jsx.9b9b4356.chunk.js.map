{"version":3,"file":"static/js/src_Components_jsx.9b9b4356.chunk.js","mappings":"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","sources":["ConnectionTestResultTableComponent.jsx","ConnectionTestComponent.jsx","Components.jsx","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n\tTable,\r\n\tTableHead,\r\n\tTableBody,\r\n\tTableContainer,\r\n\tTableRow,\r\n\tTableCell,\r\n\tuseMediaQuery,\r\n\tuseTheme,\r\n\tStack,\r\n\tDivider,\r\n\tBox,\r\n\tGrid,\r\n} from \"@mui/material\";\r\n\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/json-config/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric } from \"@iobroker/json-config\";\r\n\r\nconst styles = {\r\n\tbutton: {\r\n\t\tminWidth: 150,\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t},\r\n};\r\n\r\nconst withMediaQuery =\r\n\t(...args) =>\r\n\t(Component) =>\r\n\t(props) => {\r\n\t\tconst theme = useTheme();\r\n\t\tconst mediaQuery = useMediaQuery(theme.breakpoints.up(...args));\r\n\t\treturn <Component mediaQuery={mediaQuery} {...props} />;\r\n\t};\r\n\r\nclass ConnectionTestResultTableComponent extends ConfigGeneric {\r\n\trenderItem(error, disabled, defaultValue) {\r\n\t\tconst matches = this.props.mediaQuery;\r\n\r\n\t\tif (matches) {\r\n\t\t\treturn (\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\" size=\"small\">\r\n\t\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Step name</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Result</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Message</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{this.props.data.testResults.map((testResult) => (\r\n\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\tkey={testResult.stepOrder}\r\n\t\t\t\t\t\t\t\t\tsx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n\t\t\t\t\t\t\t\t\thover={true}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"center\" size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{testResult.run ? (testResult.success ? \"✅\" : \"❌\") : \"\"}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{testResult.stepName}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align={typeof testResult.result === \"number\" ? \"right\" : \"left\"}>\r\n\t\t\t\t\t\t\t\t\t\t{String(testResult.result ?? \"\")}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{testResult.message ?? \"\"}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tdivider={<Divider orientation=\"horizontal\" flexItem />}\r\n\t\t\t\t\tspacing={1}\r\n\t\t\t\t\tsx={{ marginTop: 1, overflow: \"auto\", height: \"100%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.data.testResults.map((testResult) => (\r\n\t\t\t\t\t\t<Grid container key={testResult.stepOrder}>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={6}\r\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t\talignItems=\"left\"\r\n\t\t\t\t\t\t\t\tfontWeight={\"bold\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tStep name\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{testResult.stepName}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={6}\r\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t\talignItems=\"left\"\r\n\t\t\t\t\t\t\t\tfontWeight={\"bold\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{testResult.run ? (testResult.success ? \"✅\" : \"❌\") : \"\"}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={6}\r\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t\talignItems=\"left\"\r\n\t\t\t\t\t\t\t\tfontWeight={\"bold\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tResult\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{String(testResult.result ?? \"\")}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={6}\r\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t\talignItems=\"left\"\r\n\t\t\t\t\t\t\t\tfontWeight={\"bold\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMessage\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{testResult.message ?? \"\"}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stack>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nConnectionTestResultTableComponent.propTypes = {\r\n\tsocket: PropTypes.object.isRequired,\r\n\tthemeType: PropTypes.string,\r\n\tthemeName: PropTypes.string,\r\n\tstyle: PropTypes.object,\r\n\tdata: PropTypes.object.isRequired,\r\n\tschema: PropTypes.object,\r\n\tonError: PropTypes.func,\r\n\tonChange: PropTypes.func,\r\n};\r\n\r\nexport default withMediaQuery(\"sm\")(ConnectionTestResultTableComponent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Button } from \"@mui/material\";\r\n\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/json-config/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric } from \"@iobroker/json-config\";\r\nimport ConnectionTestResultTableComponent from \"./ConnectionTestResultTableComponent\";\r\nimport { hostname } from \"os\";\r\n\r\nconst styles = {\r\n\tbutton: {\r\n\t\tminWidth: 150,\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t},\r\n};\r\n\r\nclass ConnectionTestComponent extends ConfigGeneric {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\talive: false,\r\n\t\t\ttestRunning: false,\r\n\t\t\ttestResults: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\r\n\t\tthis.props.socket\r\n\t\t\t.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`)\r\n\t\t\t.then(async (state) => {\r\n\t\t\t\tif (state && state.val !== undefined) {\r\n\t\t\t\t\tthis.setState({ alive: state.val });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ alive: false });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst testRunning = await this.props.socket.getState(\r\n\t\t\t\t\t`${this.props.adapterName}.${this.props.instance}.TestConnection.running`,\r\n\t\t\t\t);\r\n\t\t\t\tif (testRunning && testRunning.val === true) {\r\n\t\t\t\t\tthis.setState({ testRunning: true });\r\n\r\n\t\t\t\t\tconst testResults = await this.props.socket.getState(\r\n\t\t\t\t\t\t`${this.props.adapterName}.${this.props.instance}.TestConnection.testResults`,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (testResults && testResults.val !== undefined) {\r\n\t\t\t\t\t\tthis.setState({ testResults: JSON.parse(testResults.val || \"[]\") });\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ testRunning: false });\r\n\t\t\t\t\tthis.props.socket.setState(\r\n\t\t\t\t\t\t`${this.props.adapterName}.${this.props.instance}.TestConnection.testResults`,\r\n\t\t\t\t\t\t\"[]\",\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait this.props.socket.subscribeState(\r\n\t\t\t\t\t`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`,\r\n\t\t\t\t\tthis.onAliveChanged,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tawait this.props.socket.subscribeState(\r\n\t\t\t\t\t`${this.props.adapterName}.${this.props.instance}.TestConnection.*`,\r\n\t\t\t\t\tthis.onChangedState,\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tsuper.componentWillUnmount();\r\n\r\n\t\tthis.props.socket.unsubscribeState(\r\n\t\t\t`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`,\r\n\t\t\tthis.onAliveChanged,\r\n\t\t);\r\n\t\tthis.props.socket.unsubscribeState(\r\n\t\t\t`${this.props.adapterName}.${this.props.instance}.TestConnection.*`,\r\n\t\t\tthis.onChangedState,\r\n\t\t);\r\n\t}\r\n\r\n\tonAliveChanged = (id, state) => {\r\n\t\tconst alive = state ? state.val : false;\r\n\t\tif (alive !== this.state.alive) {\r\n\t\t\tthis.setState({ alive: alive });\r\n\t\t}\r\n\t};\r\n\r\n\tonChangedState = (id, state) => {\r\n\t\tif (id.endsWith(\".running\")) {\r\n\t\t\tconst testRunning = state ? state.val : false;\r\n\t\t\tif (testRunning !== this.state.testRunning) {\r\n\t\t\t\tthis.setState({ testRunning: testRunning });\r\n\t\t\t}\r\n\t\t} else if (id.endsWith(\".testResults\")) {\r\n\t\t\tconst testResults = state ? JSON.parse(state.val || \"[]\") : [];\r\n\t\t\tthis.setState({ testResults: testResults });\r\n\t\t}\r\n\t};\r\n\r\n\tonConnectionTestProgress(data, sourceInstance, messageType) {\r\n\t\tif (messageType === \"ConnectionTestProgress\") {\r\n\t\t\tthis.setState({ testResults: data });\r\n\t\t}\r\n\t}\r\n\r\n\ttestConnectionHandler = async () => {\r\n\t\ttry {\r\n\t\t\tconst message = {\r\n\t\t\t\tcommand: \"ConnectionTest\",\r\n\t\t\t\thostname: this.props.data.host,\r\n\t\t\t\tpassword: await this.props.socket.encrypt(this.props.data.password),\r\n\t\t\t};\r\n\t\t\t// Set the advanced SSL configuration if enabled\r\n\t\t\tif (this.props.data.advancedSSLConfiguration) {\r\n\t\t\t\tmessage.advancedSSLConfiguration = {\r\n\t\t\t\t\tsslFingerprint: this.props.data.SSLFingerprint,\r\n\t\t\t\t\tsslPublicKey: this.props.data.SSLPublicKey,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst connectionTestResult = await this.props.socket.sendTo(\r\n\t\t\t\t`${this.props.adapterName}.${this.props.instance}`,\r\n\t\t\t\tmessage.command,\r\n\t\t\t\tmessage,\r\n\t\t\t);\r\n\r\n\t\t\tthis.setState({ testResults: connectionTestResult });\r\n\t\t} finally {\r\n\t\t}\r\n\t};\r\n\r\n\trenderItem(error, disabled, defaultValue) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tdisabled={!this.state.alive || this.state.testRunning}\r\n\t\t\t\t\tonClick={this.testConnectionHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tTest connection\r\n\t\t\t\t</Button>\r\n\t\t\t\t{this.state.testRunning || this.state.testResults.length > 0 ? (\r\n\t\t\t\t\t<ConnectionTestResultTableComponent\r\n\t\t\t\t\t\tsocket={this.props.socket}\r\n\t\t\t\t\t\tthemeType={this.state.themeType}\r\n\t\t\t\t\t\tthemeName={this.state.themeName}\r\n\t\t\t\t\t\tdata={this.state}\r\n\t\t\t\t\t\tonError={() => {}}\r\n\t\t\t\t\t\tschema={{\r\n\t\t\t\t\t\t\tname: \"ConfigCustomKlf200Set/Components/ConnectionTestResultTableComponent\",\r\n\t\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></ConnectionTestResultTableComponent>\r\n\t\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConnectionTestComponent.propTypes = {\r\n\tsocket: PropTypes.object.isRequired,\r\n\tthemeType: PropTypes.string,\r\n\tthemeName: PropTypes.string,\r\n\tstyle: PropTypes.object,\r\n\tdata: PropTypes.object.isRequired,\r\n\tattr: PropTypes.string,\r\n\tschema: PropTypes.object,\r\n\tonError: PropTypes.func,\r\n\tonChange: PropTypes.func,\r\n};\r\n\r\nexport default ConnectionTestComponent;\r\n","import ConnectionTestComponent from \"./ConnectionTestComponent\";\r\n\r\nexport default { ConnectionTestComponent };\r\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["styles","withMediaQuery","args","Component","props","theme","mediaQuery","ConnectionTestResultTableComponent","error","disabled","defaultValue","testResult","ConnectionTestComponent","id","state","alive","testRunning","testResults","message","connectionTestResult","data","sourceInstance","messageType","f","k","l","m","p","q","c","a","g","b","d","e","h","exports","module"],"sourceRoot":""}